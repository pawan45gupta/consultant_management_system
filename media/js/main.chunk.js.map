{"version":3,"sources":["config.js","Components/ConfirmModal.jsx","Components/AddConsultantModal.jsx","Components/AddColumnModal.jsx","Components/RemoveColumnModal.jsx","Components/EditConsultantModal.jsx","Components/BoardingModal.jsx","Components/EnableVPNModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_END_POINT","ConfirmModal","show","handleClose","handleDelete","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","AddConsultantModal","handleAdd","columns","useState","validated","setValidated","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","stopPropagation","checkValidity","length","map","col","name","Group","as","Col","md","controlId","Label","InputGroup","hasValidation","type","Select","id","required","validations","options","value","Control","placeholder","Feedback","className","AddColumnModal","RemoveColumnModal","handleRemove","EditConsultantModal","Check","BoardingModal","VPNModal","App","useReducer","state","action","showEditConsultantModal","showBoardingModal","showVPNModal","showRemoveConsultantModal","dispatch","rowData","setRowData","userGroup","originalData","originalId","pageState","setPageState","headers","nameEQ","ca","document","cookie","split","i","c","charAt","substring","indexOf","readCookie","gridApi","setGridApi","setGridColumnApi","setShow","showRemoveButton","setShowRemoveButton","showAddModal","setShowAddModal","showAddColumnModal","setShowAddColumnModal","showRemoveColumnModal","setShowRemoveColumnModal","findIndexById","arr","findIndex","el","updateValue","data","a","axios","patch","onCellValueChanged","console","log","colDef","field","newValue","requiredIndex","rows","splice","objData","JSON","stringify","fetchData","fetch","res","json","window","sessionStorage","getItem","parse","groupArray","vendorName","filter","row","toLowerCase","useEffect","addConsultant","saveConsultant","item","forEach","getElementById","push","status","addNewColumn","removeColumn","removedColumn","selectedRows","getSelectedRows","Object","keys","exportDataAsCsv","style","width","height","components","actionCellRenderer","params","element","createElement","btn","innerHTML","onclick","alert","cancelBtn","isCurrentRowEditing","api","getEditingCells","some","cell","rowIndex","node","appendChild","defaultColDef","flex","minWidth","editable","onGridReady","columnApi","rowSelection","onSelectionChanged","suppressExcelExport","val","pinned","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["const API_END_POINT = 'http://127.0.0.1:8000/api/';\r\n\r\nexport default API_END_POINT;","import React from \"react\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\n\r\nconst ConfirmModal = ({ show, handleClose, handleDelete }) => (\r\n  <Modal show={show} onHide={handleClose}>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Confirmation</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>Are you sure to delete consultant?</Modal.Body>\r\n    <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={handleClose}>\r\n        Close\r\n      </Button>\r\n      <Button variant=\"danger\" onClick={handleDelete}>\r\n        Delete\r\n      </Button>\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport default ConfirmModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, InputGroup, Form, Col } from \"react-bootstrap\";\r\n\r\nconst AddConsultantModal = ({ show, handleClose, handleAdd, columns }) => {\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    form.checkValidity() && handleAdd();\r\n    setValidated(true);\r\n  };\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Consultant</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          {columns &&\r\n            columns.length > 0 &&\r\n            columns.map(\r\n              (col) =>\r\n                col?.name !== \"id\" && (\r\n                  <div>\r\n                    <Form.Group\r\n                      as={Col}\r\n                      md=\"12\"\r\n                      controlId=\"validationCustomUsername\"\r\n                    >\r\n                      <Form.Label>{col?.name}</Form.Label>\r\n                      <InputGroup hasValidation>\r\n                        {col?.type === \"dropdown\" ? (\r\n                          <Form.Select id={col?.name} aria-label=\"Default select example\" required={col?.validations.length > 0}>\r\n                            {col?.options?.map(value => <option value={value}>{value}</option>)}\r\n                          </Form.Select>\r\n                        ) : (\r\n                          <Form.Control\r\n                            id={col?.name}\r\n                            type={col?.type}\r\n                            // type={col?.name === 'Consultant Start Date' || col?.name === 'Proposed End Date' ? 'date': 'string' }\r\n                            placeholder={`Enter ${col?.name}`}\r\n                            required={col?.validations.length > 0}\r\n                            // defaultValue={\"test\"}\r\n                          />\r\n                        )}\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {`Please enter ${col?.name}`}\r\n                        </Form.Control.Feedback>\r\n                      </InputGroup>\r\n                    </Form.Group>\r\n                  </div>\r\n                )\r\n            )}\r\n          <Button className=\"m-2\" type=\"submit\">\r\n            Add\r\n          </Button>\r\n          <Button className=\"m-2\" variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddConsultantModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, InputGroup, Form, Col } from \"react-bootstrap\";\r\n\r\nconst AddColumnModal = ({ show, handleClose, handleAdd }) => {\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    form.checkValidity() && handleAdd();\r\n    setValidated(true);\r\n  };\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Column</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <div>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\r\n              <Form.Label>Column Name</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Control\r\n                  id={\"ColumnName\"}\r\n                  type={\"string\"}\r\n                  placeholder={`Enter Column Name`}\r\n                  required\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {`Please enter Column Name`}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n              <Form.Label>Column DataType</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Select aria-label=\"Default select example\" id=\"type\" required>\r\n                  <option value=\"string\">String</option>\r\n                  <option value=\"date\">Date</option>\r\n                  <option value=\"number\">Number</option>\r\n                </Form.Select>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {`Please select Column Data Type`}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </div>\r\n          <Button className=\"m-2\" type=\"submit\">\r\n            Add Column\r\n          </Button>\r\n          <Button className=\"m-2\" variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddColumnModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Modal, InputGroup, Form, Col } from \"react-bootstrap\";\r\n\r\nconst RemoveColumnModal = ({ show, handleClose, handleRemove, columns }) => {\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    form.checkValidity() && handleRemove();\r\n    setValidated(true);\r\n  };\r\n  return (\r\n    <Modal show={show} onHide={handleClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Column</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n          <div>\r\n            <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\r\n              <Form.Label>Select Column Name</Form.Label>\r\n              <InputGroup hasValidation>\r\n                <Form.Select\r\n                  aria-label=\"Default select example\"\r\n                  id=\"removedColumnName\"\r\n                  required\r\n                >\r\n                  {columns?.map((value) => (\r\n                    <option value={value?.name}>{value?.name}</option>\r\n                  ))}\r\n                </Form.Select>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {`Please select Column Name`}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </div>\r\n          <Button className=\"m-2\" type=\"submit\" variant=\"danger\">\r\n            Remove Column\r\n          </Button>\r\n          <Button className=\"m-2\" variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveColumnModal;\r\n","import React from \"react\";\r\nimport { Button, Modal, Form, InputGroup, Col } from \"react-bootstrap\";\r\n\r\nconst EditConsultantModal = ({ show, handleClose, columns }) => (\r\n  <Modal show={show} onHide={handleClose}>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Edit Consultant</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <Form noValidate>\r\n        {/* validated={validated} onSubmit={handleSubmit}> */}\r\n        <div>\r\n          <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\r\n            {columns &&\r\n              columns.length > 0 &&\r\n              columns.map(\r\n                (col) =>\r\n                  col?.name !== \"id\" && (\r\n                    <div>\r\n                      <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\r\n                        <Form.Label>{col?.name}</Form.Label>\r\n                        <InputGroup hasValidation>\r\n                          {col?.type === \"dropdown\" ? (\r\n                            <Form.Select\r\n                              id={col?.name}\r\n                              aria-label=\"Default select example\"\r\n                              required={col?.validations.length > 0}\r\n                            >\r\n                              {col?.options?.map((value) => (\r\n                                <option value={value}>{value}</option>\r\n                              ))}\r\n                            </Form.Select>\r\n                          ) : (\r\n                            <Form.Control\r\n                              id={col?.name}\r\n                              type={col?.type}\r\n                              // type={col?.name === 'Consultant Start Date' || col?.name === 'Proposed End Date' ? 'date': 'string' }\r\n                              placeholder={`Enter ${col?.name}`}\r\n                              required={col?.validations.length > 0}\r\n                              // defaultValue={\"test\"}\r\n                            />\r\n                          )}\r\n                          <Form.Control.Feedback type=\"invalid\">{`Please enter ${col?.name}`}</Form.Control.Feedback>\r\n                        </InputGroup>\r\n                      </Form.Group>\r\n                    </div>\r\n                  )\r\n              )}\r\n            {/* <Form.Label>UserId</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <Form.Control\r\n                id={\"userID\"}\r\n                type={\"text\"}\r\n                placeholder={`Enter UserID`}\r\n                required={true}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {`Please enter value`}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n            <Form.Label>LastName</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <Form.Control\r\n                id={\"LastName\"}\r\n                type={\"text\"}\r\n                placeholder={`Enter LastName`}\r\n                required={true}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {`Please enter LastName`}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n            <Form.Label>FirstName</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <Form.Control\r\n                id={\"FirstName\"}\r\n                type={\"text\"}\r\n                placeholder={`Enter FirstName`}\r\n                required={true}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {`Please enter FirstName`}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n            <Form.Label>Company</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <Form.Control\r\n                id={\"Company\"}\r\n                type={\"text\"}\r\n                placeholder={`Enter Company`}\r\n                required={true}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {`Please enter Company`}\r\n              </Form.Control.Feedback>\r\n            </InputGroup>\r\n            <Form.Label>Sponsor</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <Form.Select\r\n                id={\"sponsor\"}\r\n                aria-label=\"Default select example\"\r\n                required={\"true\"}\r\n              >\r\n                <option value={\"IBM\"}>IBM</option>\r\n              </Form.Select>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {`Please enter Sponsor`}\r\n              </Form.Control.Feedback>\r\n            </InputGroup> */}\r\n            <Form.Label>Is Account Manager</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <Form.Check id={\"isAccountManager\"} required={\"true\"}></Form.Check>\r\n              <Form.Control.Feedback type=\"invalid\">{`Please enter Company`}</Form.Control.Feedback>\r\n            </InputGroup>\r\n            <Form.Label>Companies Regex</Form.Label>\r\n            <InputGroup hasValidation>\r\n              <Form.Control id={\"CompanyRegex\"} type={\"text\"} placeholder={`Enter CompanyRegex`} required={true} />\r\n              <Form.Control.Feedback type=\"invalid\">{`Please enter CompanyRegex`}</Form.Control.Feedback>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </div>\r\n        <Button className=\"m-2\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button className=\"m-2\" variant=\"secondary\" onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n      </Form>\r\n    </Modal.Body>\r\n    <Modal.Footer></Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport default EditConsultantModal;\r\n","import React from \"react\";\r\nimport { Button, Modal, Form, InputGroup, Col } from \"react-bootstrap\";\r\n\r\nconst BoardingModal = ({ show, handleClose, handleDelete }) => (\r\n  <Modal show={show} onHide={handleClose}>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Confirmation</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      Are you sure to offboard consultant?\r\n      <Form noValidate>\r\n        <div>\r\n        <Form.Group as={Col} md=\"12\" controlId=\"boardingModal\">\r\n          <Form.Label>USER ID</Form.Label>\r\n          <InputGroup hasValidation>\r\n            <Form.Select\r\n              id={\"userID\"}\r\n              aria-label=\"Default select example\"\r\n              required={\"true\"}\r\n            >\r\n              <option value={\"test\"}>Test</option>\r\n            </Form.Select>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {`Please enter User ID`}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n          </Form.Group>\r\n        </div>\r\n      </Form>\r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={handleClose}>\r\n        Cancel\r\n      </Button>\r\n      <Button variant=\"primary\" onClick={handleDelete}>\r\n        Confirm\r\n      </Button>\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport default BoardingModal;\r\n","import React from \"react\";\r\nimport { Button, Modal, Form, InputGroup, Col } from \"react-bootstrap\";\r\n\r\nconst VPNModal = ({ show, handleClose, handleDelete }) => (\r\n  <Modal show={show} onHide={handleClose}>\r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Confirmation</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      Are you sure to enable/disable VPN?\r\n      <Form noValidate>\r\n        <div>\r\n        <Form.Group as={Col} md=\"12\" controlId=\"boardingModal\">\r\n          <Form.Label>USER ID</Form.Label>\r\n          <InputGroup hasValidation>\r\n            <Form.Select\r\n              id={\"userID\"}\r\n              aria-label=\"Default select example\"\r\n              required={\"true\"}\r\n            >\r\n              <option value={\"test\"}>Test</option>\r\n            </Form.Select>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              {`Please enter User ID`}\r\n            </Form.Control.Feedback>\r\n          </InputGroup>\r\n          </Form.Group>\r\n        </div>\r\n      </Form>\r\n    </Modal.Body>\r\n    <Modal.Footer>\r\n      <Button variant=\"secondary\" onClick={handleClose}>\r\n        Cancel\r\n      </Button>\r\n      <Button variant=\"primary\" onClick={handleDelete}>\r\n        Confirm\r\n      </Button>\r\n    </Modal.Footer>\r\n  </Modal>\r\n);\r\n\r\nexport default VPNModal;\r\n","import { useEffect, useReducer, useState } from \"react\";\r\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport API_END_POINT from \"./config\";\r\nimport axios from \"axios\";\r\nimport ConfirmModal from \"./Components/ConfirmModal\";\r\nimport AddConsultantModal from \"./Components/AddConsultantModal\";\r\nimport AddColumnModal from \"./Components/AddColumnModal\";\r\nimport RemoveColumnModal from \"./Components/RemoveColumnModal\";\r\nimport EditConsultantModal from \"./Components/EditConsultantModal\";\r\nimport BoardingModal from \"./Components/BoardingModal\";\r\nimport VPNModal from \"./Components/EnableVPNModal\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const initialState = {\r\n    showEditConsultantModal: false,\r\n    showBoardingModal: false,\r\n    showVPNModal: false,\r\n    showRemoveConsultantModal: false,\r\n  };\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"SHOW_EDIT_CONSULTANT_MODAL\":\r\n        return {\r\n          ...state,\r\n          showEditConsultantModal: true,\r\n        };\r\n      case \"HIDE_EDIT_CONSULTANT_MODAL\":\r\n        return {\r\n          ...state,\r\n          showEditConsultantModal: false,\r\n        };\r\n      case \"SHOW_BOARDING_MODAL\":\r\n        return {\r\n          ...state,\r\n          showBoardingModal: true,\r\n        };\r\n      case \"HIDE_BOARDING_MODAL\":\r\n        return {\r\n          ...state,\r\n          showBoardingModal: false,\r\n        };\r\n      case \"SHOW_VPN_MODAL\":\r\n        return {\r\n          ...state,\r\n          showVPNModal: true,\r\n        };\r\n      case \"HIDE_VPN_MODAL\":\r\n        return {\r\n          ...state,\r\n          showVPNModal: false,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [rowData, setRowData] = useState([]);\r\n  const [pageState, setPageState] = useState({\r\n    userGroup: \"superUser\",\r\n    originalData: null,\r\n    originalId: -1,\r\n  });\r\n  const readCookie = (name) => {\r\n    var nameEQ = name + \"=\";\r\n    var ca = document.cookie.split(\";\");\r\n    for (var i = 0; i < ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) === \" \") c = c.substring(1, c.length);\r\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const csrftoken = readCookie(\"csrftoken\");\r\n  const headers = { \"X-CSRFToken\": csrftoken };\r\n\r\n  const [gridApi, setGridApi] = useState(null);\r\n  const [gridColumnApi, setGridColumnApi] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [showRemoveButton, setShowRemoveButton] = useState(false);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showAddColumnModal, setShowAddColumnModal] = useState(false);\r\n  const [showRemoveColumnModal, setShowRemoveColumnModal] = useState(false);\r\n\r\n  const onGridReady = (params) => {\r\n    setGridApi(params.api);\r\n    setGridColumnApi(params.columnApi);\r\n  };\r\n\r\n  const findIndexById = (arr, id) => {\r\n    const requiredIndex = arr.findIndex((el) => {\r\n      return el.id === id;\r\n    });\r\n    return requiredIndex;\r\n  };\r\n\r\n  const updateValue = async (data) => {\r\n    return await axios.patch(`${API_END_POINT}consultant/${pageState?.originalId}/`, data, {\r\n      headers: headers,\r\n    });\r\n  };\r\n\r\n  const onCellValueChanged = async (event) => {\r\n    console.log(event);\r\n    console.log(\"onCellValueChanged: \" + event.colDef.field + \" = \" + event.newValue);\r\n    if (event.data.id) {\r\n      const requiredIndex = findIndexById(pageState?.originalData?.rows, event.data.id);\r\n      requiredIndex !== -1 && pageState?.originalData?.rows.splice(requiredIndex, 1);\r\n      pageState?.originalData?.rows.splice(requiredIndex, 0, event.data);\r\n      const objData = {\r\n        id: pageState?.originalId,\r\n        data: JSON.stringify({\r\n          columns: pageState?.originalData?.columns,\r\n          rows: pageState?.originalData?.rows,\r\n        }),\r\n      };\r\n\r\n      await updateValue(objData);\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const ActionCellRenderer = (params) => {\r\n    const element = document.createElement(\"span\");\r\n    const btn = document.createElement(`button`);\r\n    btn.innerHTML = \"Edit\";\r\n    btn.className = \"btn btn-primary\";\r\n    btn.onclick = function () {\r\n      alert(\"Button is clicked\");\r\n    };\r\n    const cancelBtn = document.createElement(`button`);\r\n    let editingCells = params.api.getEditingCells();\r\n    // checks if the rowIndex matches in at least one of the editing cells\r\n    let isCurrentRowEditing = editingCells.some((cell) => {\r\n      return cell.rowIndex === params.node.rowIndex;\r\n    });\r\n    if (isCurrentRowEditing) {\r\n      const cancelBtn = document.createElement(`button`);\r\n      cancelBtn.innerHTML = \"Cancel\";\r\n      cancelBtn.className = \"btn btn-secondary\";\r\n      cancelBtn.onclick = function () {\r\n        alert(\"Button is clicked\");\r\n      };\r\n      btn.innerHTML = \"Update\";\r\n    }\r\n    element.appendChild(btn);\r\n    isCurrentRowEditing && element.appendChild(cancelBtn);\r\n    return element;\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const res = await fetch(`${API_END_POINT}consultant/`);\r\n    let data = await res.json();\r\n    const originalData = data;\r\n    console.log(data);\r\n    const userGroup = window.sessionStorage.getItem(\"userGroup\");\r\n    data = JSON.parse(data && data[0]?.data)?.rows;\r\n    console.log(\"userGroup\", userGroup, userGroup !== \"superUser\");\r\n    if (userGroup !== \"superUser\") {\r\n      const groupArray = userGroup && userGroup.split(\"_\");\r\n      const vendorName = groupArray && groupArray.length > 0 && groupArray[0];\r\n      console.log(\"vendorName\", userGroup, vendorName);\r\n      data = data && data.filter((row) => row[\"EDA Vendor\"]?.toLowerCase() === vendorName?.toLowerCase());\r\n    }\r\n    setRowData(data);\r\n    setPageState({\r\n      ...pageState,\r\n      ...{\r\n        originalData: JSON.parse(originalData && originalData[0]?.data),\r\n        originalId: JSON.parse(originalData && originalData[0]?.id),\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPageState({\r\n      userGroup: window.sessionStorage.getItem(\"userGroup\"),\r\n    });\r\n    fetchData();\r\n    console.log(window.sessionStorage.getItem(\"userGroup\"));\r\n  }, []);\r\n\r\n  const addConsultant = () => {\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const addColumn = () => {\r\n    setShowAddColumnModal(true);\r\n  };\r\n\r\n  const saveConsultant = async () => {\r\n    let item = {};\r\n    pageState?.originalData?.columns.forEach((col) => {\r\n      if (col?.name !== \"id\") {\r\n        item[col?.name] = document.getElementById(col?.name) && document.getElementById(col?.name).value;\r\n      }\r\n    });\r\n    if (pageState?.originalData?.rows && pageState?.originalData?.rows.length > 0) {\r\n      item[\"id\"] = pageState?.originalData?.rows[pageState?.originalData?.rows.length - 1]?.id + 1;\r\n    } else {\r\n      item[\"id\"] = 1;\r\n    }\r\n\r\n    pageState?.originalData?.rows.push(item);\r\n\r\n    const objData = {\r\n      id: pageState?.originalId,\r\n      data: JSON.stringify({\r\n        columns: pageState?.originalData?.columns,\r\n        rows: pageState?.originalData?.rows,\r\n      }),\r\n    };\r\n    const res = await updateValue(objData);\r\n    console.log(\"update\", res);\r\n    if (res.status === 200) {\r\n      setShowAddModal(false);\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const addNewColumn = async () => {\r\n    let item = {\r\n      name: null,\r\n      type: null,\r\n      validations: [],\r\n    };\r\n    item[\"name\"] = document.getElementById(\"ColumnName\") && document.getElementById(\"ColumnName\")?.value;\r\n    item[\"type\"] = document.getElementById(\"type\") && document.getElementById(\"type\")?.value;\r\n\r\n    pageState?.originalData?.columns.push(item);\r\n\r\n    const objData = {\r\n      id: pageState?.originalId,\r\n      data: JSON.stringify({\r\n        columns: pageState?.originalData?.columns,\r\n        rows: pageState?.originalData?.rows,\r\n      }),\r\n    };\r\n    const res = await updateValue(objData);\r\n    console.log(\"update\", res);\r\n    if (res.status === 200) {\r\n      setShowAddColumnModal(false);\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const removeColumn = async () => {\r\n    const removedColumn =\r\n      document.getElementById(\"removedColumnName\") && document.getElementById(\"removedColumnName\")?.value;\r\n\r\n    pageState.originalData.columns = pageState?.originalData?.columns?.filter((item) => item?.name !== removedColumn);\r\n\r\n    const objData = {\r\n      id: pageState?.originalId,\r\n      data: JSON.stringify({\r\n        columns: pageState?.originalData?.columns,\r\n        rows: pageState?.originalData?.rows,\r\n      }),\r\n    };\r\n    const res = await updateValue(objData);\r\n    if (res.status === 200) {\r\n      setShowRemoveColumnModal(false);\r\n      fetchData();\r\n    }\r\n  };\r\n\r\n  const removeColumnConsultant = () => {\r\n    setShowRemoveColumnModal(true);\r\n  };\r\n\r\n  const removeConsultant = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const onSelectionChanged = () => {\r\n    var selectedRows = gridApi.getSelectedRows();\r\n    selectedRows && selectedRows.length > 0 && setShowRemoveButton(true);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleDelete = async () => {\r\n    var selectedRows = gridApi.getSelectedRows();\r\n    const requiredIndex = findIndexById(pageState?.originalData?.rows, selectedRows[0]?.id);\r\n    requiredIndex !== -1 && pageState?.originalData?.rows.splice(requiredIndex, 1);\r\n    const objData = {\r\n      id: pageState?.originalId,\r\n      data: JSON.stringify({\r\n        columns: pageState?.originalData?.columns,\r\n        rows: pageState?.originalData?.rows,\r\n      }),\r\n    };\r\n    await updateValue(objData);\r\n    fetchData();\r\n    setShow(false);\r\n    setShowRemoveButton(false);\r\n  };\r\n\r\n  const exportToCsv = () => {\r\n    gridApi.exportDataAsCsv();\r\n  };\r\n\r\n  const handleAddModalClose = () => setShowAddModal(false);\r\n\r\n  const handleAddColumnModalClose = () => setShowAddColumnModal(false);\r\n\r\n  const handleRemoveColumnModalClose = () => setShowRemoveColumnModal(false);\r\n\r\n  console.log(\r\n    \"rowData\",\r\n    rowData,\r\n    \"keys\",\r\n    Object.keys(rowData.length > 0 && rowData[0]),\r\n    \"pageState\",\r\n    pageState?.originalData\r\n  );\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <Button variant=\"primary\" className={\"m-2\"} onClick={addConsultant}>\r\n          Add Consultant\r\n        </Button>\r\n        {showRemoveButton && (\r\n          <Button variant=\"danger\" className={\"m-2\"} onClick={removeConsultant}>\r\n            Remove Consultant\r\n          </Button>\r\n        )}\r\n        <Button variant=\"warning\" className={\"m-2\"} onClick={() => dispatch({ type: \"SHOW_EDIT_CONSULTANT_MODAL\" })}>\r\n          Edit Consultant\r\n        </Button>\r\n        <Button variant=\"warning\" className={\"m-2\"} onClick={() => dispatch({ type: \"SHOW_BOARDING_MODAL\" })}>\r\n          Offboard\r\n        </Button>\r\n        <Button variant=\"warning\" className={\"m-2\"} onClick={() => dispatch({ type: \"SHOW_VPN_MODAL\" })}>\r\n          Enable VPN\r\n        </Button>\r\n        <Button variant=\"warning\" className={\"m-2\"} onClick={() => dispatch({ type: \"SHOW_VPN_MODAL\" })}>\r\n          Disable VPN\r\n        </Button>\r\n        <Button variant=\"primary\" className={\"m-2\"} onClick={addColumn}>\r\n          Add New Column\r\n        </Button>\r\n        <Button variant=\"danger\" className={\"m-2\"} onClick={removeColumnConsultant}>\r\n          Remove Column\r\n        </Button>\r\n        <Button variant=\"primary\" className=\"m-2\" onClick={exportToCsv}>\r\n          Export to CSV\r\n        </Button>\r\n      </div>\r\n      <ConfirmModal show={show} handleClose={handleClose} handleDelete={handleDelete} handleAdd={addConsultant} />\r\n      <AddConsultantModal\r\n        show={showAddModal}\r\n        handleClose={handleAddModalClose}\r\n        handleAdd={saveConsultant}\r\n        columns={pageState?.originalData?.columns}\r\n      />\r\n      <AddColumnModal show={showAddColumnModal} handleClose={handleAddColumnModalClose} handleAdd={addNewColumn} />\r\n      <RemoveColumnModal\r\n        show={showRemoveColumnModal}\r\n        handleClose={handleRemoveColumnModalClose}\r\n        columns={pageState?.originalData?.columns}\r\n        handleRemove={removeColumn}\r\n      />\r\n      <EditConsultantModal\r\n        show={state.showEditConsultantModal}\r\n        handleClose={() => dispatch({ type: \"HIDE_EDIT_CONSULTANT_MODAL\" })}\r\n        columns={pageState?.originalData?.columns}\r\n      />\r\n      <BoardingModal show={state.showBoardingModal} handleClose={() => dispatch({ type: \"HIDE_BOARDING_MODAL\" })} />\r\n      <VPNModal show={state.showVPNModal} handleClose={() => dispatch({ type: \"HIDE_VPN_MODAL\" })} />\r\n      <div className=\"ag-theme-alpine\" style={{ width: \"100%\", height: \"1000px\" }}>\r\n        <AgGridReact\r\n          components={{\r\n            actionCellRenderer: ActionCellRenderer,\r\n          }}\r\n          defaultColDef={{\r\n            flex: 1,\r\n            minWidth: 200,\r\n            filter: true,\r\n            editable: true,\r\n          }}\r\n          rowData={rowData}\r\n          onGridReady={onGridReady}\r\n          onCellValueChanged={onCellValueChanged}\r\n          rowSelection={\"single\"}\r\n          onSelectionChanged={onSelectionChanged}\r\n          suppressExcelExport={true}\r\n        >\r\n          {pageState?.originalData?.columns?.map((val) => (\r\n            <AgGridColumn\r\n              field={val?.name}\r\n              pinned={val?.name === \"id\" || val?.name === \"Consultant Name\" ? \"left\" : null}\r\n            ></AgGridColumn>\r\n          ))}\r\n          {/* <AgGridColumn\r\n            field={\"Action\"}\r\n            editable={false}\r\n            cellRenderer={\"actionCellRenderer\"}\r\n          ></AgGridColumn> */}\r\n        </AgGridReact>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}