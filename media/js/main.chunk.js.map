{"version":3,"sources":["config.js","Components/ConfirmModal.jsx","Components/AddConsultantModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_END_POINT","ConfirmModal","show","handleClose","handleDelete","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","AddConsultantModal","handleAdd","rowData","useState","validated","setValidated","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","stopPropagation","checkValidity","length","Object","keys","map","col","Group","as","Col","md","controlId","Label","InputGroup","hasValidation","Control","id","type","placeholder","required","Feedback","className","App","setRowData","userGroup","pageState","setPageState","headers","name","nameEQ","ca","document","cookie","split","i","c","charAt","substring","indexOf","readCookie","gridApi","setGridApi","setGridColumnApi","setShow","showRemoveButton","setShowRemoveButton","showAddModal","setShowAddModal","fetchData","a","fetch","res","json","data","console","log","window","sessionStorage","getItem","groupArray","vendorName","filter","row","eda_vendor","toLowerCase","useEffect","addConsultant","saveConsultant","item","forEach","getElementById","value","axios","post","status","selectedRows","getSelectedRows","delete","exportDataAsCsv","style","width","height","components","actionCellRenderer","params","element","createElement","btn","innerHTML","onclick","alert","cancelBtn","isCurrentRowEditing","api","getEditingCells","some","cell","rowIndex","node","appendChild","defaultColDef","flex","minWidth","editable","onGridReady","columnApi","onCellValueChanged","colDef","field","newValue","put","rowSelection","onSelectionChanged","suppressExcelExport","val","pinned","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["const API_END_POINT = 'http://127.0.0.1:8000/api/';\n\nexport default API_END_POINT;","import React from \"react\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nconst ConfirmModal = ({ show, handleClose, handleDelete }) => (\n  <Modal show={show} onHide={handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>Confirmation</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>Are you sure to delete consultant?</Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={handleClose}>\n        Close\n      </Button>\n      <Button variant=\"danger\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Modal.Footer>\n  </Modal>\n);\n\nexport default ConfirmModal;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  InputGroup,\n  Form,\n  Col,\n} from \"react-bootstrap\";\n\nconst AddConsultantModal = ({ show, handleClose, handleAdd, rowData }) => {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    form.checkValidity() && handleAdd();\n    setValidated(true);\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Add Consultant</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          {rowData &&\n            rowData.length > 0 &&\n            Object.keys(rowData[0]).map(\n              (col) =>\n                col !== \"id\" && (\n                  <div>\n                    <Form.Group\n                      as={Col}\n                      md=\"12\"\n                      controlId=\"validationCustomUsername\"\n                    >\n                      <Form.Label>{col}</Form.Label>\n                      <InputGroup hasValidation>\n                        <Form.Control\n                          id={col}\n                          type={col === 'consultant_start_date' || col === 'proposed_end_date' ? 'date': 'string' }\n                          placeholder={`Enter ${col}`}\n                          required\n                          // defaultValue={\"test\"}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {`Please enter ${col}`}\n                        </Form.Control.Feedback>\n                      </InputGroup>\n                    </Form.Group>\n                  </div>\n                )\n            )}\n          <Button className=\"m-2\" type=\"submit\">\n            Add\n          </Button>\n          <Button className=\"m-2\" variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default AddConsultantModal;\n","import { useEffect, useState } from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport API_END_POINT from \"./config\";\nimport axios from \"axios\";\nimport ConfirmModal from \"./Components/ConfirmModal\";\nimport AddConsultantModal from \"./Components/AddConsultantModal\";\n\nfunction App() {\n  const [rowData, setRowData] = useState([]);\n  const [pageState, setPageState] = useState({\n    userGroup: \"superUser\",\n  });\n  const readCookie = (name) => {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === \" \") c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  };\n\n  const csrftoken = readCookie(\"csrftoken\");\n  const headers = { \"X-CSRFToken\": csrftoken };\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [show, setShow] = useState(false);\n  const [showRemoveButton, setShowRemoveButton] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  };\n\n  const onCellValueChanged = (event) => {\n    console.log(event);\n    console.log(\n      \"onCellValueChanged: \" + event.colDef.field + \" = \" + event.newValue\n    );\n    if (event.data.id) {\n      axios.put(`${API_END_POINT}consultant/${event.data.id}/`, event.data, {\n        headers: headers,\n      });\n    }\n  };\n\n  const ActionCellRenderer = (params) => {\n    const element = document.createElement(\"span\");\n    const btn = document.createElement(`button`);\n    btn.innerHTML = \"Edit\";\n    btn.className = \"btn btn-primary\";\n    btn.onclick = function () {\n      alert(\"Button is clicked\");\n    };\n    const cancelBtn = document.createElement(`button`);\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell) => {\n      return cell.rowIndex === params.node.rowIndex;\n    });\n    if (isCurrentRowEditing) {\n      const cancelBtn = document.createElement(`button`);\n      cancelBtn.innerHTML = \"Cancel\";\n      cancelBtn.className = \"btn btn-secondary\";\n      cancelBtn.onclick = function () {\n        alert(\"Button is clicked\");\n      };\n      btn.innerHTML = \"Update\";\n    }\n    element.appendChild(btn);\n    isCurrentRowEditing && element.appendChild(cancelBtn);\n    return element;\n  };\n\n  const fetchData = async () => {\n    const res = await fetch(`${API_END_POINT}consultant/`);\n    let data = await res.json();\n    console.log(data);\n    const userGroup = window.sessionStorage.getItem(\"userGroup\");\n    console.log('userGroup', userGroup, userGroup !== \"superUser\");\n    if (userGroup !== \"superUser\") {\n      const groupArray = userGroup.split(\"_\");\n      const vendorName = groupArray && groupArray.length > 0 && groupArray[0];\n      console.log(\"vendorName\", userGroup, vendorName);\n      data = data.filter(\n        (row) => row?.eda_vendor?.toLowerCase() === vendorName?.toLowerCase()\n      );\n    }\n    setRowData(data);\n  };\n\n  useEffect(() => {\n    setPageState({\n      userGroup: window.sessionStorage.getItem(\"userGroup\"),\n    });\n    fetchData();\n    console.log(window.sessionStorage.getItem(\"userGroup\"));\n  }, []);\n\n  const addConsultant = () => {\n    setShowAddModal(true);\n  };\n\n  const saveConsultant = async () => {\n    // const item = {\n    //   consultant_name: \"Gupta, Pawan\",\n    //   uid: \"c_adnant\",\n    //   first_name: \" Adnan\",\n    //   last_name: \"Tanwir\",\n    //   eda_vendor: \"Cadence\",\n    //   consultant_type: \"Applications Engineer\",\n    //   technology_focus: \"Functional Verification\",\n    //   access_type: \"Badge and System\",\n    //   consultant_start_date: \"2015-03-23\",\n    //   proposed_end_date: \"2024-12-30\",\n    //   qcm_consultant_current_status: \"Active\",\n    //   off_board_consultant: null,\n    //   current_vpn_status: \"Enabled\",\n    //   consultant_location: null,\n    //   current_consultant_sponsor: \"Huang, Joe\",\n    //   project: \"\",\n    //   justificaiton_for_remaining_onboarded: null,\n    //   approval_for_justification: null,\n    //   approval_comments: null,\n    // };\n    let item = {};\n    Object.keys(rowData[0]).forEach((col) => {\n      if (col !== \"id\") {\n        item[col] =\n          document.getElementById(col) && document.getElementById(col).value;\n      }\n    });\n\n    const res = await axios.post(`${API_END_POINT}consultant/`, item, {\n      headers: headers,\n    });\n    console.log(\"update\", res);\n    if (res.status === 201) {\n      setShowAddModal(false);\n      fetchData();\n    }\n  };\n\n  const removeConsultant = () => {\n    setShow(true);\n  };\n\n  // const actionCellRenderer(params) {\n  // console.log('params', params);\n  //   let eGui = document.createElement(\"div\");\n  //   let editingCells = params.api.getEditingCells();\n  //   // checks if the rowIndex matches in at least one of the editing cells\n  //   let isCurrentRowEditing = editingCells.some((cell) => {\n  //     return cell.rowIndex === params.node.rowIndex;\n  //     });\n  //   if (isCurrentRowEditing) {\n  //       eGui.innerHTML = `\n  //           <Button variant=\"primary\" onClick={${addConsultant}}>Edit</Button>\n  //           <Button variant=\"secondary\" onClick={${addConsultant}}>Cancel</Button>\n  //           `;\n  //   } else {\n  //   eGui.innerHTML = `\n  //   <Button variant=\"primary\" onClick={${addConsultant}}>Edit</Button>`;\n  // }\n  // return eGui;\n  // }\n\n  const onSelectionChanged = () => {\n    var selectedRows = gridApi.getSelectedRows();\n    selectedRows && selectedRows.length > 0 && setShowRemoveButton(true);\n  };\n\n  const handleClose = () => setShow(false);\n  const handleDelete = async () => {\n    var selectedRows = gridApi.getSelectedRows();\n    let res = await axios.delete(\n      `${API_END_POINT}consultant/${selectedRows[0]?.id}`,\n      {\n        headers: headers,\n      }\n    );\n    fetchData();\n    setShow(false);\n    setShowRemoveButton(false);\n  };\n\n  const exportToCsv = () => {\n    gridApi.exportDataAsCsv();\n  };\n\n  const handleAddModalClose = () => setShowAddModal(false);\n\n  return (\n    <div className=\"App\">\n      {pageState.userGroup === \"superUser\" ? (\n        <div>\n          <Button variant=\"primary\" className={\"m-2\"} onClick={addConsultant}>\n            Add Consultant\n          </Button>\n          {showRemoveButton && (\n            <Button\n              variant=\"danger\"\n              className={\"m-2\"}\n              onClick={removeConsultant}\n            >\n              Remove Consultant\n            </Button>\n          )}\n          <Button variant=\"primary\" className=\"m-2\" onClick={exportToCsv}>\n            Export to CSV\n          </Button>\n        </div>\n      ) : null}\n      <ConfirmModal\n        show={show}\n        handleClose={handleClose}\n        handleDelete={handleDelete}\n        handleAdd={addConsultant}\n      />\n      <AddConsultantModal\n        show={showAddModal}\n        handleClose={handleAddModalClose}\n        handleAdd={saveConsultant}\n        rowData={rowData}\n      />\n      <div\n        className=\"ag-theme-alpine\"\n        style={{ width: \"100%\", height: \"1000px\" }}\n      >\n        <AgGridReact\n          components={{\n            actionCellRenderer: ActionCellRenderer,\n          }}\n          defaultColDef={{\n            flex: 1,\n            minWidth: 200,\n            filter: true,\n            editable: true,\n          }}\n          rowData={rowData}\n          onGridReady={onGridReady}\n          onCellValueChanged={onCellValueChanged}\n          rowSelection={\"single\"}\n          onSelectionChanged={onSelectionChanged}\n          suppressExcelExport={true}\n        >\n          {rowData &&\n            rowData.length > 0 &&\n            Object.keys(rowData[0])?.map((val) => (\n              <AgGridColumn\n                field={val}\n                pinned={\n                  val === \"id\" || val === \"consultant_name\" ? \"left\" : null\n                }\n              ></AgGridColumn>\n            ))}\n          {/* <AgGridColumn\n            field={\"Action\"}\n            editable={false}\n            cellRenderer={\"actionCellRenderer\"}\n          ></AgGridColumn> */}\n        </AgGridReact>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}