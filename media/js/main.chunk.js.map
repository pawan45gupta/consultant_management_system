{"version":3,"sources":["config.js","Components/ConfirmModal.jsx","Components/AddConsultantModal.jsx","Components/AddColumnModal.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_END_POINT","ConfirmModal","show","handleClose","handleDelete","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","AddConsultantModal","handleAdd","columns","useState","validated","setValidated","Form","noValidate","onSubmit","event","form","currentTarget","preventDefault","stopPropagation","checkValidity","length","map","col","name","Group","as","Col","md","controlId","Label","InputGroup","hasValidation","Control","id","type","placeholder","required","Feedback","className","AddColumnModal","Select","value","App","rowData","setRowData","userGroup","originalData","originalId","pageState","setPageState","headers","nameEQ","ca","document","cookie","split","i","c","charAt","substring","indexOf","readCookie","gridApi","setGridApi","setGridColumnApi","setShow","showRemoveButton","setShowRemoveButton","showAddModal","setShowAddModal","showAddColumnModal","setShowAddColumnModal","findIndexById","arr","findIndex","el","updateValue","data","a","axios","patch","onCellValueChanged","console","log","colDef","field","newValue","requiredIndex","rows","splice","objData","JSON","stringify","fetchData","fetch","res","json","window","sessionStorage","getItem","parse","groupArray","vendorName","filter","row","toLowerCase","useEffect","addConsultant","saveConsultant","item","forEach","getElementById","push","status","addNewColumn","selectedRows","getSelectedRows","Object","keys","exportDataAsCsv","style","width","height","components","actionCellRenderer","params","element","createElement","btn","innerHTML","onclick","alert","cancelBtn","isCurrentRowEditing","api","getEditingCells","some","cell","rowIndex","node","appendChild","defaultColDef","flex","minWidth","editable","onGridReady","columnApi","rowSelection","onSelectionChanged","suppressExcelExport","val","pinned","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.chunk.js","sourcesContent":["const API_END_POINT = 'http://127.0.0.1:8000/api/';\n\nexport default API_END_POINT;","import React from \"react\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nconst ConfirmModal = ({ show, handleClose, handleDelete }) => (\n  <Modal show={show} onHide={handleClose}>\n    <Modal.Header closeButton>\n      <Modal.Title>Confirmation</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>Are you sure to delete consultant?</Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"secondary\" onClick={handleClose}>\n        Close\n      </Button>\n      <Button variant=\"danger\" onClick={handleDelete}>\n        Delete\n      </Button>\n    </Modal.Footer>\n  </Modal>\n);\n\nexport default ConfirmModal;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Modal,\n  InputGroup,\n  Form,\n  Col,\n} from \"react-bootstrap\";\n\nconst AddConsultantModal = ({ show, handleClose, handleAdd, columns }) => {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    form.checkValidity() && handleAdd();\n    setValidated(true);\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Add Consultant</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          {columns &&\n            columns.length > 0 &&\n            columns.map(\n              (col) =>\n                col?.name !== \"id\" && (\n                  <div>\n                    <Form.Group\n                      as={Col}\n                      md=\"12\"\n                      controlId=\"validationCustomUsername\"\n                    >\n                      <Form.Label>{col?.name}</Form.Label>\n                      <InputGroup hasValidation>\n                        <Form.Control\n                          id={col?.name}\n                          type={col?.type}\n                          // type={col?.name === 'Consultant Start Date' || col?.name === 'Proposed End Date' ? 'date': 'string' }\n                          placeholder={`Enter ${col?.name}`}\n                          required\n                          // defaultValue={\"test\"}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                          {`Please enter ${col?.name}`}\n                        </Form.Control.Feedback>\n                      </InputGroup>\n                    </Form.Group>\n                  </div>\n                )\n            )}\n          <Button className=\"m-2\" type=\"submit\">\n            Add\n          </Button>\n          <Button className=\"m-2\" variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default AddConsultantModal;\n","import React, { useState } from \"react\";\nimport { Button, Modal, InputGroup, Form, Col } from \"react-bootstrap\";\n\nconst AddColumnModal = ({ show, handleClose, handleAdd }) => {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    event.stopPropagation();\n    form.checkValidity() && handleAdd();\n    setValidated(true);\n  };\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Add Column</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form noValidate validated={validated} onSubmit={handleSubmit}>\n          <div>\n            <Form.Group as={Col} md=\"12\" controlId=\"validationCustomUsername\">\n              <Form.Label>Column Name</Form.Label>\n              <InputGroup hasValidation>\n                <Form.Control\n                  id={\"ColumnName\"}\n                  type={\"string\"}\n                  placeholder={`Enter Column Name`}\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {`Please enter Column Name`}\n                </Form.Control.Feedback>\n              </InputGroup>\n              <Form.Label>Column DataType</Form.Label>\n              <InputGroup hasValidation>\n                <Form.Select aria-label=\"Default select example\" id=\"type\" required>\n                  <option value=\"string\">String</option>\n                  <option value=\"date\">Date</option>\n                  <option value=\"number\">Number</option>\n                </Form.Select>\n                <Form.Control.Feedback type=\"invalid\">\n                  {`Please select Column Data Type`}\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Form.Group>\n          </div>\n          <Button className=\"m-2\" type=\"submit\">\n            Add Column\n          </Button>\n          <Button className=\"m-2\" variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default AddColumnModal;\n","import { useEffect, useState } from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport \"./App.css\";\nimport Button from \"react-bootstrap/Button\";\nimport API_END_POINT from \"./config\";\nimport axios from \"axios\";\nimport ConfirmModal from \"./Components/ConfirmModal\";\nimport AddConsultantModal from \"./Components/AddConsultantModal\";\nimport AddColumnModal from \"./Components/AddColumnModal\";\n\nfunction App() {\n  const [rowData, setRowData] = useState([]);\n  const [pageState, setPageState] = useState({\n    userGroup: \"superUser\",\n    originalData: null,\n    originalId: -1,\n  });\n  const readCookie = (name) => {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(\";\");\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === \" \") c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  };\n\n  const csrftoken = readCookie(\"csrftoken\");\n  const headers = { \"X-CSRFToken\": csrftoken };\n\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [show, setShow] = useState(false);\n  const [showRemoveButton, setShowRemoveButton] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showAddColumnModal, setShowAddColumnModal] = useState(false);\n\n  const onGridReady = (params) => {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  };\n\n  const findIndexById = (arr, id) => {\n    const requiredIndex = arr.findIndex((el) => {\n      return el.id === id;\n    });\n    return requiredIndex;\n  };\n\n  const updateValue = async (data) => {\n    return await axios.patch(\n      `${API_END_POINT}consultant/${pageState?.originalId}/`,\n      data,\n      {\n        headers: headers,\n      }\n    );\n  };\n\n  const onCellValueChanged = async (event) => {\n    console.log(event);\n    console.log(\n      \"onCellValueChanged: \" + event.colDef.field + \" = \" + event.newValue\n    );\n    if (event.data.id) {\n      const requiredIndex = findIndexById(\n        pageState?.originalData?.rows,\n        event.data.id\n      );\n      requiredIndex !== -1 &&\n        pageState?.originalData?.rows.splice(requiredIndex, 1);\n      pageState?.originalData?.rows.splice(requiredIndex, 0, event.data);\n      const objData = {\n        id: pageState?.originalId,\n        data: JSON.stringify({\n          columns: pageState?.originalData?.columns,\n          rows: pageState?.originalData?.rows,\n        }),\n      };\n\n      await updateValue(objData);\n      fetchData();\n    }\n  };\n\n  const ActionCellRenderer = (params) => {\n    const element = document.createElement(\"span\");\n    const btn = document.createElement(`button`);\n    btn.innerHTML = \"Edit\";\n    btn.className = \"btn btn-primary\";\n    btn.onclick = function () {\n      alert(\"Button is clicked\");\n    };\n    const cancelBtn = document.createElement(`button`);\n    let editingCells = params.api.getEditingCells();\n    // checks if the rowIndex matches in at least one of the editing cells\n    let isCurrentRowEditing = editingCells.some((cell) => {\n      return cell.rowIndex === params.node.rowIndex;\n    });\n    if (isCurrentRowEditing) {\n      const cancelBtn = document.createElement(`button`);\n      cancelBtn.innerHTML = \"Cancel\";\n      cancelBtn.className = \"btn btn-secondary\";\n      cancelBtn.onclick = function () {\n        alert(\"Button is clicked\");\n      };\n      btn.innerHTML = \"Update\";\n    }\n    element.appendChild(btn);\n    isCurrentRowEditing && element.appendChild(cancelBtn);\n    return element;\n  };\n\n  const fetchData = async () => {\n    const res = await fetch(`${API_END_POINT}consultant/`);\n    let data = await res.json();\n    const originalData = data;\n    console.log(data);\n    const userGroup = window.sessionStorage.getItem(\"userGroup\");\n    data = JSON.parse(data && data[0]?.data)?.rows;\n    console.log(\"userGroup\", userGroup, userGroup !== \"superUser\");\n    if (userGroup !== \"superUser\") {\n      const groupArray = userGroup.split(\"_\");\n      const vendorName = groupArray && groupArray.length > 0 && groupArray[0];\n      console.log(\"vendorName\", userGroup, vendorName);\n      data = data.filter(\n        (row) => row[\"EDA Vendor\"]?.toLowerCase() === vendorName?.toLowerCase()\n      );\n    }\n    setRowData(data);\n    setPageState({\n      ...pageState,\n      ...{\n        originalData: JSON.parse(originalData && originalData[0]?.data),\n        originalId: JSON.parse(originalData && originalData[0]?.id),\n      },\n    });\n  };\n\n  useEffect(() => {\n    setPageState({\n      userGroup: window.sessionStorage.getItem(\"userGroup\"),\n    });\n    fetchData();\n    console.log(window.sessionStorage.getItem(\"userGroup\"));\n  }, []);\n\n  const addConsultant = () => {\n    setShowAddModal(true);\n  };\n\n  const addColumn = () => {\n    setShowAddColumnModal(true);\n  };\n\n  const saveConsultant = async () => {\n    let item = {};\n    pageState?.originalData?.columns.forEach((col) => {\n      if (col?.name !== \"id\") {\n        item[col?.name] =\n          document.getElementById(col?.name) && document.getElementById(col?.name).value;\n      }\n    });\n    if (\n      pageState?.originalData?.rows &&\n      pageState?.originalData?.rows.length > 0\n    ) {\n      item[\"id\"] =\n        pageState?.originalData?.rows[pageState?.originalData?.rows.length - 1]\n          ?.id + 1;\n    } else {\n      item[\"id\"] = 1;\n    }\n\n    pageState?.originalData?.rows.push(item);\n\n    const objData = {\n      id: pageState?.originalId,\n      data: JSON.stringify({\n        columns: pageState?.originalData?.columns,\n        rows: pageState?.originalData?.rows,\n      }),\n    };\n    const res = await updateValue(objData);\n    console.log(\"update\", res);\n    if (res.status === 200) {\n      setShowAddModal(false);\n      fetchData();\n    }\n  };\n\n  const addNewColumn = async () => {\n    let item = {\n      \"name\": null,\n      \"type\": null,\n      \"validations\":[]\n    };\n    item[\"name\"] = document.getElementById(\"ColumnName\") && document.getElementById(\"ColumnName\")?.value;\n    item[\"type\"] = document.getElementById(\"type\") && document.getElementById(\"type\")?.value;\n\n    pageState?.originalData?.columns.push(item);\n\n    const objData = {\n      id: pageState?.originalId,\n      data: JSON.stringify({\n        columns: pageState?.originalData?.columns,\n        rows: pageState?.originalData?.rows,\n      }),\n    };\n    const res = await updateValue(objData);\n    console.log(\"update\", res);\n    if (res.status === 200) {\n      setShowAddColumnModal(false);\n      fetchData();\n    }\n  }\n\n  const removeConsultant = () => {\n    setShow(true);\n  };\n\n  // const actionCellRenderer(params) {\n  // console.log('params', params);\n  //   let eGui = document.createElement(\"div\");\n  //   let editingCells = params.api.getEditingCells();\n  //   // checks if the rowIndex matches in at least one of the editing cells\n  //   let isCurrentRowEditing = editingCells.some((cell) => {\n  //     return cell.rowIndex === params.node.rowIndex;\n  //     });\n  //   if (isCurrentRowEditing) {\n  //       eGui.innerHTML = `\n  //           <Button variant=\"primary\" onClick={${addConsultant}}>Edit</Button>\n  //           <Button variant=\"secondary\" onClick={${addConsultant}}>Cancel</Button>\n  //           `;\n  //   } else {\n  //   eGui.innerHTML = `\n  //   <Button variant=\"primary\" onClick={${addConsultant}}>Edit</Button>`;\n  // }\n  // return eGui;\n  // }\n\n  const onSelectionChanged = () => {\n    var selectedRows = gridApi.getSelectedRows();\n    selectedRows && selectedRows.length > 0 && setShowRemoveButton(true);\n  };\n\n  const handleClose = () => setShow(false);\n  const handleDelete = async () => {\n    var selectedRows = gridApi.getSelectedRows();\n    const requiredIndex = findIndexById(\n      pageState?.originalData?.rows,\n      selectedRows[0]?.id\n    );\n    requiredIndex !== -1 &&\n      pageState?.originalData?.rows.splice(requiredIndex, 1);\n    const objData = {\n      id: pageState?.originalId,\n      data: JSON.stringify({\n        columns: pageState?.originalData?.columns,\n        rows: pageState?.originalData?.rows,\n      }),\n    };\n    await updateValue(objData);\n    fetchData();\n    setShow(false);\n    setShowRemoveButton(false);\n  };\n\n  const exportToCsv = () => {\n    gridApi.exportDataAsCsv();\n  };\n\n  const handleAddModalClose = () => setShowAddModal(false);\n\n  const handleAddColumnModalClose = () => setShowAddColumnModal(false);\n\n  console.log(\n    \"rowData\",\n    rowData,\n    \"keys\",\n    Object.keys(rowData.length > 0 && rowData[0]),\n    \"pageState\",\n    pageState?.originalData\n  );\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Button variant=\"primary\" className={\"m-2\"} onClick={addConsultant}>\n          Add Consultant\n        </Button>\n        <Button variant=\"primary\" className={\"m-2\"} onClick={addColumn}>\n          Add New Column\n        </Button>\n        {showRemoveButton && (\n          <Button variant=\"danger\" className={\"m-2\"} onClick={removeConsultant}>\n            Remove Consultant\n          </Button>\n        )}\n        <Button variant=\"primary\" className=\"m-2\" onClick={exportToCsv}>\n          Export to CSV\n        </Button>\n      </div>\n      <ConfirmModal\n        show={show}\n        handleClose={handleClose}\n        handleDelete={handleDelete}\n        handleAdd={addConsultant}\n      />\n      <AddConsultantModal\n        show={showAddModal}\n        handleClose={handleAddModalClose}\n        handleAdd={saveConsultant}\n        columns={pageState?.originalData?.columns}\n      />\n      <AddColumnModal\n        show={showAddColumnModal}\n        handleClose={handleAddColumnModalClose}\n        handleAdd={addNewColumn}\n      />\n      <div\n        className=\"ag-theme-alpine\"\n        style={{ width: \"100%\", height: \"1000px\" }}\n      >\n        <AgGridReact\n          components={{\n            actionCellRenderer: ActionCellRenderer,\n          }}\n          defaultColDef={{\n            flex: 1,\n            minWidth: 200,\n            filter: true,\n            editable: true,\n          }}\n          rowData={rowData}\n          onGridReady={onGridReady}\n          onCellValueChanged={onCellValueChanged}\n          rowSelection={\"single\"}\n          onSelectionChanged={onSelectionChanged}\n          suppressExcelExport={true}\n        >\n          {pageState?.originalData?.columns?.map((val) => (\n            <AgGridColumn\n              field={val?.name}\n              pinned={\n                val?.name === \"id\" || val?.name === \"Consultant Name\"\n                  ? \"left\"\n                  : null\n              }\n            ></AgGridColumn>\n          ))}\n          {/* <AgGridColumn\n            field={\"Action\"}\n            editable={false}\n            cellRenderer={\"actionCellRenderer\"}\n          ></AgGridColumn> */}\n        </AgGridReact>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}