{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","rowData","setRowData","useEffect","a","fetch","res","json","data","console","log","fetchData","window","sessionStorage","getItem","className","style","width","height","length","Object","keys","map","val","field","pinned","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAkCeA,MA5Bf,WAAgB,IAAD,EACb,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAaC,OAXDC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACoBC,MAAM,yCAD1B,cACQC,EADR,gBAEqBA,EAAIC,OAFzB,OAEQC,EAFR,OAGEC,QAAQC,IAAIF,GACZN,EAAWM,GAJb,4CADc,uBAAC,WAAD,wBAOdG,GACAF,QAAQC,IAAIE,OAAOC,eAAeC,QAAQ,WAC1C,IAGA,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACC,qBAAKA,UAAU,kBAAkBC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,UAAjE,SACI,cAAC,cAAD,CACIjB,QAASA,EADb,SAEMA,GAAWA,EAAQkB,OAAS,IAA5B,UAAiCC,OAAOC,KAAKpB,EAAQ,WAArD,aAAiC,EAAyBqB,KAAI,SAAAC,GAAG,OAAI,cAAC,eAAD,CAAcC,MAAOD,EAAKE,OAAgB,OAARF,GAAwB,oBAARA,EAA4B,OAAS,oBCd9JG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport './App.css';\n\nfunction App() {\n  const [rowData, setRowData] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const res = await fetch('http://127.0.0.1:8000/api/consultant/');\n      const data = await res.json();\n      console.log(data);\n      setRowData(data);\n    }\n    fetchData();\n    console.log(window.sessionStorage.getItem('user'))\n  },[]);\n\n   return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <div className=\"ag-theme-alpine\" style={{ width: '100%', height: '1000px' }}>\n           <AgGridReact\n               rowData={rowData}>\n                {rowData && rowData.length > 0 && Object.keys(rowData[0])?.map(val => <AgGridColumn field={val} pinned={val === 'id' || val === 'consultant_name' ? 'left' : null }></AgGridColumn>)}\n           </AgGridReact>\n       </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}